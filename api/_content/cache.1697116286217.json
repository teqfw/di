{"generatedAt":1697116298551,"generateTime":75,"contents":[{"_path":"/","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"@teqfw/di","description":"A Dependency Injection container for regular JavaScript is provided, which can be used in both browser and Node.js\napplications. This library exclusively supports ES6 modules. The primary objective of this library is late binding with\nminimal manual configuration for the container. All linking instructions are encapsulated within the dependency\nidentifiers and source path resolver. Additionally, the container offers the capability to modify object identifiers\n(preprocessing) and the created objects (postprocessing). These features enable you to more comprehensively\ndistribute the necessary functionality across npm packages and reuse npm packages in different projects, following a '\nmodular monolith' architecture (see the sample).","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"teqfwdi"},"children":[{"type":"text","value":"@teqfw/di"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A Dependency Injection container for regular JavaScript is provided, which can be used in both "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"browser"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Node.js"}]},{"type":"text","value":"\napplications. This library exclusively supports ES6 modules. The primary objective of this library is late binding with\n"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"minimal manual configuration"}]},{"type":"text","value":" for the container. All linking instructions are encapsulated within the dependency\nidentifiers and source path resolver. Additionally, the container offers the capability to modify object identifiers\n("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"preprocessing"}]},{"type":"text","value":") and the created objects ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"postprocessing"}]},{"type":"text","value":"). These features enable you to more comprehensively\ndistribute the necessary functionality across npm packages and reuse npm packages in different projects, following a '\n"},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"modular monolith"}]},{"type":"text","value":"' architecture (see the "},{"type":"element","tag":"a","props":{"href":"https://github.com/flancer64/demo-di-app","rel":["nofollow"]},"children":[{"type":"text","value":"sample"}]},{"type":"text","value":")."}]},{"type":"element","tag":"h2","props":{"id":"inversion-of-control"},"children":[{"type":"text","value":"Inversion of Control"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The primary motivation for creating this library was the concept that JavaScript is a language in which the entire\napplication can be written, both on the front end and the back end. The idea was to enable the use of the same\nJavaScript code seamlessly on both the front end and the back end without requiring any changes, including additional\ntranspilation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The main challenge encountered along this path was static importing. When the entire application can fit into a single\nnpm package, all sources can be linked to each other through relative paths. However, if the sources are distributed\nacross different npm packages, addressing them becomes problematic:"}]},{"type":"element","tag":"pre","props":{"code":"// backend style\nimport something from '@vendor/package/src/Module.js';\n\n// frontend style\nimport something from 'https://domain.com/@vendor/package/src/Module.js'; \n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// backend style\nimport something from '@vendor/package/src/Module.js';\n\n// frontend style\nimport something from 'https://domain.com/@vendor/package/src/Module.js'; \n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The inversion of control (IoC) design pattern came to the rescue. In this pattern, any software object with external\ndependencies provides a mechanism for obtaining these dependencies. The external environment, whether it's a test unit\nor an object container, is responsible for creating these dependencies and providing them to the software object."}]},{"type":"element","tag":"pre","props":{"code":"// constructor-based injection\nclass Service {\n  constructor(config, logger) {}\n}\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// constructor-based injection\nclass Service {\n  constructor(config, logger) {}\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If all dependencies are added to software objects through a similar mechanism, there is no need to use static imports in\nthe source code itself. Now, they can be used without any changes, both on the front end and on the back end."}]},{"type":"element","tag":"h2","props":{"id":"object-container"},"children":[{"type":"text","value":"Object Container"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Many programming languages implement the Dependency Injection pattern. In this pattern, an application typically\nutilizes an object container, responsible for creating all the application's objects and their dependencies. The\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"@teqfw/di"}]},{"type":"text","value":" package provides precisely such an object container ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"src/Container.js"}]},{"type":"text","value":"). This object container is\ninitialized and configured at the outset of application execution, after which it assumes responsibility for creating\nthe remaining application objects:"}]},{"type":"element","tag":"pre","props":{"code":"import Container from '@teqfw/di';\n\nconst container = new Container();\nconst resolver = container.getResolver();\nresolver.addNamespaceRoot('App_', pathApp);\nresolver.addNamespaceRoot('Sample_Lib_', pathLib);\nconst app = await container.get('App_Main$');\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import Container from '@teqfw/di';\n\nconst container = new Container();\nconst resolver = container.getResolver();\nresolver.addNamespaceRoot('App_', pathApp);\nresolver.addNamespaceRoot('Sample_Lib_', pathLib);\nconst app = await container.get('App_Main$');\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since JavaScript does not have its own namespaces, similar to packages in Java and namespaces in PHP, the experience of\n"},{"type":"element","tag":"a","props":{"href":"https://framework.zend.com/manual/2.4/en/migration/namespacing-old-classes.html","rel":["nofollow"]},"children":[{"type":"text","value":"Zend 1"}]},{"type":"text","value":" is used as the basis for\nidentifiers."}]},{"type":"element","tag":"h2","props":{"id":"namespaces"},"children":[{"type":"text","value":"Namespaces"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The primary purpose of namespaces is to address code elements within an application. In JavaScript (JS) applications,\ncode is organized into npm packages, within which the sources reside in files and directories. Each npm package and its\nroot directory can be linked to a namespace:"}]},{"type":"element","tag":"pre","props":{"code":"Vendor_Package_ => /home/user/app/node_modules/@vendor/package/src/....\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Vendor_Package_ => /home/user/app/node_modules/@vendor/package/src/....\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This way, you can reference any ES6 module in any npm package:"}]},{"type":"element","tag":"pre","props":{"code":"Venodr_Package_Shared_Dto_Service_Save \n    => /home/user/app/node_modules/@vendor/package/src/Shared/Dto/Service/Save.js \n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Venodr_Package_Shared_Dto_Service_Save \n    => /home/user/app/node_modules/@vendor/package/src/Shared/Dto/Service/Save.js \n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Depending on the execution environment, the mapping may be different:"}]},{"type":"element","tag":"pre","props":{"code":"Vendor_Package_ => /home/user/app/node_modules/@vendor/package/src    // Linux style\nVendor_Package_ => C:\\projects\\app\\node_modules\\@vendor\\package\\src   // Windows style\nVendor_Package_ => https://unpkg.com/@vendor/package/src              // Web style\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Vendor_Package_ => /home/user/app/node_modules/@vendor/package/src    // Linux style\nVendor_Package_ => C:\\projects\\app\\node_modules\\@vendor\\package\\src   // Windows style\nVendor_Package_ => https://unpkg.com/@vendor/package/src              // Web style\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The source code employs namespaces to reference dependencies, while the object container utilizes a resolver to\ntranslate the namespace into the corresponding path to the source code file, contingent upon the runtime environment:"}]},{"type":"element","tag":"pre","props":{"code":"Venodr_Package_Shared_Dto_Service_Save \n    => /home/user/app/node_modules/@vendor/package/src/Shared/Dto/Service/Save.js\nVenodr_Package_Shared_Dto_Service_Save \n    => C:\\projects\\app\\node_modules\\@vendor\\package\\src\\Shared\\Dto\\Service\\Save.js\nVenodr_Package_Shared_Dto_Service_Save \n    => https://unpkg.com/@vendor/package/src/Shared/Dto/Service/Save.js\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Venodr_Package_Shared_Dto_Service_Save \n    => /home/user/app/node_modules/@vendor/package/src/Shared/Dto/Service/Save.js\nVenodr_Package_Shared_Dto_Service_Save \n    => C:\\projects\\app\\node_modules\\@vendor\\package\\src\\Shared\\Dto\\Service\\Save.js\nVenodr_Package_Shared_Dto_Service_Save \n    => https://unpkg.com/@vendor/package/src/Shared/Dto/Service/Save.js\n"}]}]},{"type":"element","tag":"h2","props":{"id":"dependency-specification"},"children":[{"type":"text","value":"Dependency Specification"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"JavaScript lacks reflection capabilities similar to Java or PHP. Consequently, to enable the object container to\ncomprehend the necessary dependencies for creating a specific object, a distinct convention is employed - a dependency\nspecification. A dependency specification is an object where each key represents the identifier of the required\ndependency:"}]},{"type":"element","tag":"pre","props":{"code":"class Service {\n  constructor(\n          {\n            App_Config: config,\n            App_Logger: logger\n          }\n  ) {}\n}\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Service {\n  constructor(\n          {\n            App_Config: config,\n            App_Logger: logger\n          }\n  ) {}\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the object container, the required object is created as follows:"}]},{"type":"element","tag":"pre","props":{"code":"const App_Config = await container.get('App_Config');\nconst App_Logger = await container.get('App_Logger');\nconst spec = {App_Config, App_Logger};\nconst obj = new Service(spec);\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const App_Config = await container.get('App_Config');\nconst App_Logger = await container.get('App_Logger');\nconst spec = {App_Config, App_Logger};\nconst obj = new Service(spec);\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If dependencies are injected into a factory function, it appears as follows:"}]},{"type":"element","tag":"pre","props":{"code":"function Factory({App_Config: config, App_Logger: logger}) {\n  // perform operations with dependencies and compose the result\n  return res;\n}\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function Factory({App_Config: config, App_Logger: logger}) {\n  // perform operations with dependencies and compose the result\n  return res;\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"es6-export"},"children":[{"type":"text","value":"Es6 export"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In ES6+, a distinct building block in application development is the act\nof "},{"type":"element","tag":"a","props":{"href":"https://flancer32.com/es6-export-as-code-brick-b33a8efb3510","rel":["nofollow"]},"children":[{"type":"text","value":"exporting"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"export {\n  obj1 as default, obj2, obj3\n};\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export {\n  obj1 as default, obj2, obj3\n};\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Static linking through imports is performed at the level of these building blocks:"}]},{"type":"element","tag":"pre","props":{"code":"import obj1 from './mod.js';\nimport {obj2} from './mod.js';\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import obj1 from './mod.js';\nimport {obj2} from './mod.js';\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This implies that the dependency identifier must have the capability to reference not only the ES6 module itself but\nalso a specific export within it, as illustrated in this example:"}]},{"type":"element","tag":"pre","props":{"code":"const exp = 'Vendor_Package_Module.export';\nconst def = 'Vendor_Package_Module.default';\nconst obj2 = 'Vendor_Package_Module.obj2';\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const exp = 'Vendor_Package_Module.export';\nconst def = 'Vendor_Package_Module.default';\nconst obj2 = 'Vendor_Package_Module.obj2';\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case, the dependency declaration in a constructor or factory function could look like this:"}]},{"type":"element","tag":"pre","props":{"code":"class Service {\n  constructor(\n          {\n            'App_Config.default': config,\n            'App_Util.logger': logger\n          }\n  ) {}\n}\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Service {\n  constructor(\n          {\n            'App_Config.default': config,\n            'App_Util.logger': logger\n          }\n  ) {}\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"late-binding"},"children":[{"type":"text","value":"Late binding"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The object container links objects not at the source code level but in runtime mode. In my applications, I have\nencountered two particularly useful runtime object lifecycles:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Singleton"}]},{"type":"text","value":": It exists in a single instance within the application."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Instance"}]},{"type":"text","value":": A new object is created each time."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since any string can be used as an object key in a dependency specification, various formats can be devised to specify\nthe lifecycle of the required dependency. I have personally chosen the following format:"}]},{"type":"element","tag":"pre","props":{"code":"const asIs = 'Vendor_Package_Module.default';\nconst asSingleton = 'Vendor_Package_Module.default$';\nconst asInstance = 'Vendor_Package_Module.default$$';\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const asIs = 'Vendor_Package_Module.default';\nconst asSingleton = 'Vendor_Package_Module.default$';\nconst asInstance = 'Vendor_Package_Module.default$$';\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In principle, each package can have its own format for describing the dependencies it uses internally. The\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"TeqFw_Di_Container_Parser"}]},{"type":"text","value":" object is responsible for applying the appropriate format within the required namespace."}]},{"type":"element","tag":"h2","props":{"id":"transforming-the-result"},"children":[{"type":"text","value":"Transforming the Result"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here are the steps for the object container:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"processing steps","src":"./doc/img/teqfw_di_container_steps.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two stages involved here:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Preprocessing"}]},{"type":"text","value":": the modification of the dependency identifier"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Postprocessing"}]},{"type":"text","value":": the modification of the created object"}]}]},{"type":"element","tag":"h3","props":{"id":"preprocessing"},"children":[{"type":"text","value":"Preprocessing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At times, situations may arise, especially when utilizing various extensions of the core functionality, where it becomes\nnecessary to redefine certain objects within the application. For such scenarios, "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"@teqfw/di"}]},{"type":"text","value":" includes a preprocessor:"}]},{"type":"element","tag":"pre","props":{"code":"/** @type {TeqFw_Di_Api_Container_PreProcessor} */\nconst pre = container.getPreProcessor();\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/** @type {TeqFw_Di_Api_Container_PreProcessor} */\nconst pre = container.getPreProcessor();\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can add handlers (chunks) to the preprocessor that are capable of modifying the initial "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"depId"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"/** @type {TeqFw_Di_Api_Container_PreProcessor_Chunk} */\nconst replace = new ReplaceChunk(); // some implementation of the interface\npre.addChunk(replace);\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/** @type {TeqFw_Di_Api_Container_PreProcessor_Chunk} */\nconst replace = new ReplaceChunk(); // some implementation of the interface\npre.addChunk(replace);\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The preprocessor calls the handlers sequentially and can, for example, replace a dependency from the base npm package\n("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"App_Base_Mod_Api_Service_Auth"}]},{"type":"text","value":") with another dependency from one of the npm packages ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Auth_Password_Mod_Service"}]},{"type":"text","value":" or\n"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"OAuth2_Mod_Service"}]},{"type":"text","value":"), depending on the npm packages included in the application compilation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By using such replacements, you can implement the core functionality in one npm package, while in other npm packages,\nyou can implement the additional functionality required by the core package."}]},{"type":"element","tag":"h3","props":{"id":"postprocessing"},"children":[{"type":"text","value":"Postprocessing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since the container creates all objects in the application, it can also perform additional actions on newly created\nobjects, such as adding extra functionality to them in the form of a wrapper."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"@teqfw/di"}]},{"type":"text","value":" enables you to add individual handlers to the post-processing stage and modify the result. For example, you\ncan wrap a finished object or perform various operations on it:"}]},{"type":"element","tag":"pre","props":{"code":"// ./PostChunk.js\n/**\n * @implements TeqFw_Di_Api_Container_PostProcessor_Chunk\n */\nexport default {\n    modify: function (obj, originalId, stack) {\n        if (originalId.wrappers.indexOf('proxy') !== -1)\n            return new Proxy(obj, {\n                get: async function (base, name) { /* do something */ }\n            });\n        else return obj;\n    }\n};\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// ./PostChunk.js\n/**\n * @implements TeqFw_Di_Api_Container_PostProcessor_Chunk\n */\nexport default {\n    modify: function (obj, originalId, stack) {\n        if (originalId.wrappers.indexOf('proxy') !== -1)\n            return new Proxy(obj, {\n                get: async function (base, name) { /* do something */ }\n            });\n        else return obj;\n    }\n};\n"}]}]},{"type":"element","tag":"pre","props":{"code":"// ./main.js\nimport postChunk from './PostChunk.mjs';\n\ncontainer.getPostProcessor().addChunk(postChunk);\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// ./main.js\nimport postChunk from './PostChunk.mjs';\n\ncontainer.getPostProcessor().addChunk(postChunk);\n"}]}]},{"type":"element","tag":"h2","props":{"id":"resume"},"children":[{"type":"text","value":"Resume"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"@teqfw/di"}]},{"type":"text","value":" offers Dependency Injection for regular JavaScript with minimal manual configuration, supporting both\nbrowser and Node.js environments. Its use of late binding and an object container in JavaScript applications, along with\nthe ability to modify the behavior of created objects (via pseudo-interfaces and wrappers), allows you to apply\narchitectural solutions from other languages (such as Java, PHP, C#) and fully harness the capabilities of npm packages\nand ES6 modules in JavaScript applications, particularly in the Node.js environment."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"inversion-of-control","depth":2,"text":"Inversion of Control"},{"id":"object-container","depth":2,"text":"Object Container"},{"id":"namespaces","depth":2,"text":"Namespaces"},{"id":"dependency-specification","depth":2,"text":"Dependency Specification"},{"id":"es6-export","depth":2,"text":"Es6 export"},{"id":"late-binding","depth":2,"text":"Late binding"},{"id":"transforming-the-result","depth":2,"text":"Transforming the Result","children":[{"id":"preprocessing","depth":3,"text":"Preprocessing"},{"id":"postprocessing","depth":3,"text":"Postprocessing"}]},{"id":"resume","depth":2,"text":"Resume"}]}},"_type":"markdown","_id":"content:index.md","_source":"content","_file":"index.md","_extension":"md"},{"_path":"/test","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Title of the page","description":"meta description of the page","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"test"},"children":[{"type":"text","value":"TEST"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Any text is going here..."}]},{"type":"element","tag":"h2","props":{"id":"h2"},"children":[{"type":"text","value":"H2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Any text is going here..."}]},{"type":"element","tag":"h3","props":{"id":"h3"},"children":[{"type":"text","value":"H3"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Any text is going here..."}]},{"type":"element","tag":"h4","props":{"id":"h4"},"children":[{"type":"text","value":"H4"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Any text is going here..."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"h2","depth":2,"text":"H2","children":[{"id":"h3","depth":3,"text":"H3"}]}]}},"_type":"markdown","_id":"content:test.md","_source":"content","_file":"test.md","_extension":"md"}],"navigation":[{"title":"@teqfw/di","_path":"/"},{"title":"Title of the page","_path":"/test"}]}